import * as tf from '@tensorflow/tfjs';
import { Model, SymbolicTensor, Tensor } from '@tensorflow/tfjs';
import { Layer } from '@tensorflow/tfjs-layers/dist/engine/topology';
import { onnx } from 'onnx-proto';
export declare function load(modelUrl: string): Promise<Model>;
export declare class OnnxModel {
    modelUrl: string;
    onnx: onnx.IModelProto;
    graph: onnx.IGraphProto;
    blobShapes: {
        [name: string]: number[];
    };
    blobValues: {
        [name: string]: Tensor;
    };
    blobs: {
        [name: string]: Tensor | SymbolicTensor;
    };
    constructor(modelUrl: string);
    load(): Promise<void>;
    getModel(): tf.Model;
    getLayers(graph: onnx.IGraphProto): {
        [key: string]: Layer;
    };
    getTfjsLayer(node: onnx.INodeProto, input?: SymbolicTensor[]): Layer;
}
