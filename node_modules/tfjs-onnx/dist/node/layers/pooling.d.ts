import { Layer } from '@tensorflow/tfjs-layers/dist/engine/topology';
import { Pooling1DLayerConfig, Pooling2DLayerConfig } from '@tensorflow/tfjs-layers/dist/layers/pooling';
import { onnx } from 'onnx-proto';
import { OnnxNode } from '../node';
export declare type PoolingLayerConfig = Pooling1DLayerConfig | Pooling2DLayerConfig;
export interface PoolNodeConfig {
    auto_pad?: onnx.AttributeProto;
    kernel_shape?: onnx.AttributeProto;
    pads?: onnx.AttributeProto;
    strides?: onnx.AttributeProto;
}
export declare abstract class Pool extends OnnxNode {
    getTfjsLayerConfig(node: onnx.INodeProto): PoolingLayerConfig;
    static getPoolDim(node: onnx.INodeProto): number;
}
export declare class MaxPool extends Pool {
    getTfjsLayer(node: onnx.INodeProto): Layer;
}
export declare class AveragePool extends Pool {
    getTfjsLayer(node: onnx.INodeProto): Layer;
}
export declare class GlobalMaxPool extends Pool {
    getTfjsLayer(node: onnx.INodeProto): Layer;
}
export declare class GlobalAveragePool extends Pool {
    getTfjsLayer(node: onnx.INodeProto): Layer;
}
