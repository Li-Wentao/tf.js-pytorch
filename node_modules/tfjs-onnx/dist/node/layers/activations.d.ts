import { Layer } from '@tensorflow/tfjs-layers/dist/engine/topology';
import { ActivationLayerConfig } from '@tensorflow/tfjs-layers/dist/layers/core';
import { onnx } from 'onnx-proto';
import { OnnxNode } from '../node';
export declare abstract class Activation extends OnnxNode {
    getTfjsLayer(node: onnx.INodeProto): Layer;
}
export declare class Relu extends Activation {
    getTfjsLayerConfig(node: onnx.INodeProto): ActivationLayerConfig;
}
export declare class Tanh extends Activation {
    getTfjsLayerConfig(node: onnx.INodeProto): ActivationLayerConfig;
}
export declare class Sigmoid extends Activation {
    getTfjsLayerConfig(node: onnx.INodeProto): ActivationLayerConfig;
}
export declare class Elu extends Activation {
    getTfjsLayerConfig(node: onnx.INodeProto): ActivationLayerConfig;
}
export declare class Softplus extends Activation {
    getTfjsLayerConfig(node: onnx.INodeProto): ActivationLayerConfig;
}
export declare class Softsign extends Activation {
    getTfjsLayerConfig(node: onnx.INodeProto): ActivationLayerConfig;
}
export declare class HardSigmoid extends Activation {
    getTfjsLayerConfig(node: onnx.INodeProto): ActivationLayerConfig;
}
