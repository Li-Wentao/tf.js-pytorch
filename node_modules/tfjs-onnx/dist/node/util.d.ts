import * as tf from '@tensorflow/tfjs';
import { Tensor } from '@tensorflow/tfjs';
import { DType, TypedArray } from '@tensorflow/tfjs-core/dist/types';
import { LayerConfig } from '@tensorflow/tfjs-layers/dist/engine/topology';
import { onnx } from 'onnx-proto';
export declare function normalizeArrayToObj<T>(array: T[], indexKey: keyof T): {
    [key: string]: T;
};
export declare function joinArraysToObj<T>(keys: string[], values: T[]): {
    [key: string]: T;
};
export declare function isNotNull(val: any): boolean;
export declare function fetchText(uri: string): Promise<string>;
export declare function fetchArrayBuffer(uri: string): Promise<ArrayBuffer>;
export declare function parseOnnxAxis(axis: number, shape: number[]): number;
export declare function parseOnnxShape(shape: number[]): number[];
export declare function parseOnnxModel(data: ArrayBuffer): onnx.ModelProto;
export declare function parseAttrOrDefault(attr: onnx.AttributeProto, def?: any): any;
export declare function parseOnnxAttr(attr: onnx.AttributeProto): any;
export declare function onnxTensorTypeToTfjsDtype(tensor: onnx.TensorProto): DType;
export declare function parseOnnxTensor(tensor: onnx.TensorProto): TypedArray;
export declare function onnxShapeToTfjsShape(shape: onnx.ITensorShapeProto): number[];
export declare function getNamedAttrs<T>(attrs?: any[]): T;
export declare function getTfjsCommonConfig(node: onnx.INodeProto): LayerConfig;
export declare function loadOnnxModel(modelUrl: string): Promise<onnx.IModelProto>;
export declare function getBlobValues(graph: onnx.IGraphProto): {
    [key: string]: tf.Tensor<tf.Rank>;
};
export declare function getValueInfo(valueInfo: onnx.IValueInfoProto[]): {
    [key: string]: number[];
};
export declare function getBlobShapes(graph: onnx.IGraphProto): {
    [key: string]: number[];
};
export declare function getInputShape(shape: number[]): number[];
export declare function getLayerName(node: onnx.INodeProto): string;
export declare function onnxTensorToTfjsWeigths(tensor: onnx.TensorProto): Tensor;
export declare function loadImageData(url: string): Promise<HTMLImageElement>;
